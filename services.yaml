---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/services
- Welcome:
# public services ____________________________________________
    - Nginx:
        icon: nginx
        description: Welcome to my server, please read here if you are confused
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/welcome'
        server: my-docker
        container: nginx-doc

    - Nginx:
        icon: nginx
        description: Another fun page ( Dont expect too much :p )
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/fun-site'
        server: my-docker
        container: nginx-fun

- Public services:
    - Jellyfin:
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/movie'
        icon: jellyfin
        description: Watch movie/tv-series!
        server: my-docker
        container: jellyfin
        widget:
          type: jellyfin
          url: http://jellyfin:8096/movie
          key: {{HOMEPAGE_VAR_JELLY}}
          enableBlocks: true # optional, defaults to false
          enableNowPlaying: true # optional, defaults to true        


    - Jellyseerr:
        icon: jellyseerr
        href: 'http://{{HOMEPAGE_VAR_DUCK_JELLYSEERR}}'
        server: my-docker
        container: jellyseerr
        widget:
          type: jellyseerr
          url: http://jellyseerr:5055
          key: {{HOMEPAGE_VAR_JELLYSEERR}}


    - Immich:
        href: 'http://{{HOMEPAGE_VAR_DUCK_IMMICH}}'
        icon: immich
        server: my-docker
        container: immich_server
        widget:
          type: immich
          url: http://immich_server:3001
          key: {{HOMEPAGE_VAR_IMMICH}} 


    - Navidrome:
        href: /navmusic
        description: Songs & music
        icon: navidrome
        server: my-docker
        container: navidrome
        widget:
            type: navidrome
            url: http://navidrome:4533/navmusic
            user: saurav
            token: {{HOMEPAGE_VAR_NAVI}} #md5(password + salt)
            salt: randomsalt


    - Filebrowser (Public):
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/filebrowser'
        icon: files
        description: Public files
        server: my-docker
        container: filebrowser-media

    - Webtop:
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/webtop'
        description: Browse full linux on your browser
        icon: webtop
        server: my-docker
        container: webtop

    - Openspeed:
        # href: http://192.168.0.120/speed
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/speed'
        description: Speedtest from client to server
        icon: https://raw.githubusercontent.com/openspeedtest/Speed-Test/main/assets/images/icons/favicon.ico                
        server: my-docker
        container: openspeed

    - Minetest:
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/welcome/minetest.html'
        icon: minecraft
        description: Minecrft like open source game, contact with me if you wanna play in this server
        server: my-docker
        container: minetest 

- Stats:
  - Speed tracker:
      description: Internet speed log
      icon: speedtest-tracker
      server: my-docker
      container: speedtest-tracker
      widget:
          type: speedtest
          fields: ["download", "upload", "ping"]
          url: http://speedtest-tracker

  - Server uptime:
      icon: https://uptimerobot.com/favicon.ico
      description: Nginx uptime with uptime robot api
      widget:
        type: uptimerobot
        fields: ["status", "uptime", "lastDown", "downDuration"]
        url: https://api.uptimerobot.com
        key: {{HOMEPAGE_VAR_UPTIME_ROBOT_API}}

  - Watchtower:
      description: Update container
      icon: watchtower
      server: my-docker
      container: watchtower
      widget:
        type: watchtower
        url: http://watchtower:8080
        key: {{HOMEPAGE_VAR_WATCH}}        

  - Uptime public page:
      icon: uptime-kuma
      href: 'http://{{HOMEPAGE_VAR_DUCK_UPTIME}}/status/public'
      server: my-docker
      container: uptimekuma
      widget:
          fields: ["down", "uptime", "incident"]
          type: uptimekuma
          url: http://uptimekuma:3001
          slug: public


# private services ____________________________________________

- Sever stats:
    - Speed tracker:
        href: http://192.168.0.120:5487/
        description: Internet speed log
        # icon: http://192.168.0.120:5487/favicon.ico
        icon: speedtest-tracker
        server: my-docker
        container: speedtest-tracker
        widget:
            type: speedtest
            fields: ["download", "upload", "ping"]
            url: http://speedtest-tracker

    - Server uptime:
        href: https://uptimerobot.com/dashboard
        icon: https://uptimerobot.com/favicon.ico
        description: Nginx uptime with uptime robot api
        widget:
            type: uptimerobot
            fields: ["status", "uptime", "lastDown", "downDuration"]
            url: https://api.uptimerobot.com
            key: {{HOMEPAGE_VAR_UPTIME_ROBOT_API}}

    - Uptime public page:
        icon: uptime-kuma
        href: 'http://{{HOMEPAGE_VAR_DUCK_UPTIME}}/status/public'
        server: my-docker
        container: uptimekuma
        widget:
            fields: ["down", "uptime", "incident"]
            type: uptimekuma
            url: http://uptimekuma:3001
            slug: public
    - Scrutiny:
        href: http://192.168.0.120:8083
        description: Scrutiny
        icon: scrutiny
        server: my-docker
        container: scrutiny
        widget:
            type: scrutiny
            url: http://scrutiny:8080

    - Traefik:
        href: http://192.168.0.120:8080
        description: Traefik admin
        icon: traefik
        server: my-docker
        container: traefik
        widget:
            type: traefik
            url: http://traefik:8080
            # username: username # optional
            # password: password # optional
    - Watchtower:
        description: Update container
        icon: watchtower
        server: my-docker
        container: watchtower
        widget:
            type: watchtower
            url: http://watchtower:8080
            key: {{HOMEPAGE_VAR_WATCH}}
            
- Utilities:
    - Yacht:
        href: http://192.168.0.120:8036/
        description: manage docker container
        icon: yacht
        server: my-docker
        container: yacht

    - Portainer:
        href: https://192.168.0.120:9000
        description: manage docker container
        icon: portainer
        server: my-docker
        container: portainer-ce

    - n8n:
        href: http://192.168.0.120:5678
        icon: n8n
        server: my-docker
        container: n8nio

    - Yaade:
        href: http://192.168.0.120:9339/
        description: API Development    
        icon: yaade
        server: my-docker
        container: yaade


    - Webtop:
        href: http://192.168.0.120:3757/
        icon: webtop
        server: my-docker
        container: webtop

    - Filebrowser (Public):
        href: 'http://192.168.0.120/filebrowser'
        icon: files
        server: my-docker
        container: filebrowser-media

    - Filestash:
        href: http://192.168.0.120:7334/files/
        icon: files
        server: my-docker
        container: filestash

    - Tailscale:
        href: https://login.tailscale.com/admin/machines
        icon: tailscale


    - Homeserver Syncthing:
        href: http://192.168.0.120:8384
        description: Homeserver syncthing
        icon: syncthing
        # ping: http://192.168.0.120:8384

    - Openspeed:
        href: http://192.168.0.120:3003/
        description: Speedtest from client to server
        icon: https://raw.githubusercontent.com/openspeedtest/Speed-Test/main/assets/images/icons/favicon.ico                
        server: my-docker
        container: openspeed

- Local services:
    - Minetest:
        href: 'http://{{HOMEPAGE_VAR_DUCK}}/welcome/minetest.html'
        icon: minecraft
        description: Minecrft like open source game
        server: my-docker
        container: minetest 

    - Sonarr:
        icon: sonarr
        href: http://192.168.0.120/sonarr
        server: my-docker
        container: sonarr

    - Radarr:
        icon: radarr
        href: http://192.168.0.120/radarr
        server: my-docker
        container: radarr

    - Swing music:
        href: http://192.168.0.120:1971
        # icon: https://swingmusic.vercel.app/favicon.ico
        icon: https://swingmusic.vercel.app/favicon.ico
        server: my-docker
        container: swingmusic

    - AudiobookShelf:
        href: http://192.168.0.120:13378
        icon: audiobookshelf
        server: my-docker
        container: audiobookshelf

    - Stashapp:
        href: http://192.168.0.120:9995
        icon: stash
        server: my-docker
        container: stash

    - Nginx doc:
        icon: nginx
        description: Welcome to my server, please read here if you are confused
        href: http://192.168.0.120:2222/
        server: my-docker
        container: nginx-doc

    - Nginx fun:
        icon: nginx
        description: Another fun page ( Dont expect too much :p )
        href: http://192.168.0.120:2322/
        server: my-docker
        container: nginx-fun

- Downloads:
    - Transmission:
        href: http://192.168.0.120:9092/transmission/web/
        description: Torrent download client
        icon: https://raw.githubusercontent.com/6c65726f79/Transmissionic/main/public/assets/icon/favicon.png
        widget:
            type: transmission
            url: http://transmission:9091
            username: {{HOMEPAGE_VAR_TRANS_USER}}
            password: {{HOMEPAGE_VAR_TRANS_PASS}}              

    - Sonarr:
        icon: sonarr
        href: /sonarr
        description: Download tv-series
        widget:
          type: sonarr  
          url: http://sonarr:8989/sonarr
          key: {{HOMEPAGE_VAR_SONARR}}
          enableQueue: false # optional, defaults to false

    - Radarr:
        icon: radarr
        href: /radarr
        description: Download movies
        widget:
          type: radarr
          url: http://radarr:7878/radarr
          key: {{HOMEPAGE_VAR_RADARR}}
          enableQueue: false # optional, defaults to false                

    - Prowlarr:
        href: http://192.168.0.120:9696/
        description: prowlarr
        icon: prowlarr
        server: my-docker
        container: prowlarr
        widget:
            type: prowlarr
            url: http://prowlarr:9696
            key: {{HOMEPAGE_VAR_PROWLARR}}

    - Youtube-dl:
        href: http://192.168.0.120:8998
        icon: youtube
        server: my-docker
        container: youtube-dl

    - Youtube-dl private:
        href: http://192.168.0.120:17442
        icon: youtube
        server: my-docker
        container: youtube-dl-private


- Database:
    - Couchdb:
        href: http://192.168.0.120:5984/_utils/#/_all_dbs
        description: for local obsidian sync
        icon: https://couchdb.apache.org/favicon.ico
        server: my-docker
        container: couchdb
    - Weaviate:
        description: Vector database
        icon: https://weaviate.io/img/favicon.ico
        server: my-docker
        container: weaviate-obsidian
    - Nocodb:
        href: http://192.168.0.120:3333/
        description: No code Database
        icon: nocodb
        server: my-docker
        container: nocodb

    - n8n postgress:
        description: n8n database
        icon: postgres
        server: my-docker
        container: n8nPost

- Other containers:
    - cloudeflare proxy:
        icon: cloudflare
        server: my-docker
        container: cloud-proxy

    - Glutun:
        icon: gluetun
        server: my-docker
        container: gluetun-private

    - Context:
        icon: https://weaviate.io/img/favicon.ico
        server: my-docker
        container: contextionary-obsidian

    - flaresolverr:
        icon: docker
        server: my-docker
        container: flaresolverr

    - dockerproxy:
        icon: docker
        server: my-docker
        container: dockerproxy  

    - monocker:
        icon: docker
        server: my-docker
        container: monocker

    - onChangeScript:
        icon: docker
        server: my-docker
        container: onChangeScript




